{"name": "test_main[case_data0]", "status": "broken", "statusDetails": {"message": "UnboundLocalError: local variable 'FAILED_CASE_DICT' referenced before assignment", "trace": "case_data = {'assert_response_value': [{'assert_type': 'equals_assert', 'expected': 1, 'expr': '$.status'}], 'case_title': '用户登录成功...d283aa400af464c76d713c07ad', 'type': 'random_number(10)'}, 'extract_key': {'access_token': '$.data.access_token'}, ...}\n\n    @pytest.mark.parametrize(\"case_data\",ReadFile.read_case())\n    def test_main(case_data):\n    \n>       case_execute(case_data)\n\ntestcases\\test_case.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncase_data = {'assert_response_value': [{'assert_type': 'equals_assert', 'expected': 1, 'expr': '$.status'}], 'case_title': '用户登录成功...d283aa400af464c76d713c07ad', 'type': 'random_number(10)'}, 'extract_key': {'access_token': '$.data.access_token'}, ...}\n\n    def case_execute(case_data):\n    \n        replace_case_data = replace_case(case_data)\n        response_data = mq.send_requests(replace_case_data[\"url\"],replace_case_data[\"method\"],replace_case_data[\"data\"])\n    \n        if replace_case_data.get(\"extract_key\") is not None:\n            extract_data_from_response(replace_case_data[\"extract_key\"],response_data.json())\n    \n        if replace_case_data.get(\"assert_response_value\") is not None:\n            case_assert_result = RespondAssert().assert_response_value(replace_case_data[\"assert_response_value\"],response_data.json())\n            if case_assert_result:\n>               FAILED_CASE_DICT['接口名称'] = case_data['case_title']\nE               UnboundLocalError: local variable 'FAILED_CASE_DICT' referenced before assignment\n\ncase_run\\run.py:19: UnboundLocalError"}, "parameters": [{"name": "case_data", "value": "{'url': 'api/v1/pub/login/3rd', 'method': 'POST', 'remark': 'random_number(10)', 'is_run': True, 'data': {'ID': 'chenzanxu', 'secret': '25d55ad283aa400af464c76d713c07ad', 'type': 'random_number(10)'}, 'extract_key': {'access_token': '$.data.access_token'}, 'assert_response_value': [{'expr': '$.status', 'expected': 1, 'assert_type': 'equals_assert'}], 'case_title': '用户登录成功'}"}], "start": 1683791961101, "stop": 1683791961173, "uuid": "fa5e4e37-d416-4dd1-8c77-da4b93b26d30", "historyId": "b63b8d48ca9756c0239f49db858a1b5d", "testCaseId": "f2c9a2bd320c73dfb73708221865066f", "fullName": "testcases.test_case#test_main", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_case"}, {"name": "host", "value": "DESKTOP-5KLQQEQ"}, {"name": "thread", "value": "16992-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_case"}]}